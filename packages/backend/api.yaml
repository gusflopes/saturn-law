openapi: 3.0.0

info:
  title: SaturnLaw API
  description: Backend da Suíte de Aplicativos para Gestão Jurídica
  version: 1.0.0
  contact:
    name: Gustavo Lopes
    email: gusflopes86@gmail.com

servers:
  - url: https://api.saturnlaw.com.br/v1
    description: Production servers
  - url: http://localhost:3333
    description: Development Server

tags:
  - name: users
    description: Routes related to Users
  - name: clients
    description: Routes for authenticated users
  - name: lawsuits
    description: Routes for users with Admin privilegies


paths:
  /users:
    post:
      summary: Create User
      tags:
        - users
      security: []
      responses:
        201:
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseUser'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
    put:
      summary: Update User
      tags:
        - users
      responses:
        201:
          description: User updated

  /{lawfirmId}/users/membership:
    post:
      summary: Add User to Lawfirm
      tags:
       - users
      responses:
        201:
          description: User added to lawfirm
    delete:
      summary: Remove User from Lawfirm
      tags:
        - users
      responses:
        200:
          description: User removed from lawfirm
    put:
      summary: Update User's Permission
      tags:
        - users
      responses:
        200:
          description: User's permissions updated

  /{lawfirmId}/clients:
    post:
      summary: Create a new Client
      tags:
        - clients
      responses:
        201:
          description: Client created
    get:
      summary: List all Clients
      tags:
        - clients
      responses:
        200:
          description: List of all clients
  /{lawfirmId}/clients/{clientId}:
    get:
      summary: Client Details
      tags:
        - clients
      responses:
        200:
          description: OK
    put:
      summary: Update Client Details
      tags:
        - clients
      responses:
        200:
          description: OK
    delete:
      summary: Delete Client
      tags:
        - clients
      responses:
        200:
          description: OK

  /{lawfirmId}/clients/keychain/{clientId}:
    post:
      summary: Store a new password
      tags:
        - clients
      responses:
        201:
          description: Client created
    get:
      summary: List Client Password
      tags:
        - clients
      responses:
        200:
          description: List of all clients
    put:
      summary: Update Client Details
      tags:
        - clients
      responses:
        200:
          description: OK
    delete:
      summary: Delete Client
      tags:
        - clients
      responses:
        200:
          description: OK


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:

    User:
      type: object
      properties:
        name:
          type: string
          example: 'Gustavo Lopes'
        email:
          type: string
          example: 'gustavo@saturnlaw.com.br'
        passsword:
          type: string
          example: 'pass123'

    Client:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: 'João da Silva'
        cpfCnpj:
          type: string
          example: '123.456.789-01'
        identidade:
          type: string
          example: '123.456 SSP/MS'
        birthDate:
          type: string
          example: '15/09/1986'
        maritalStatus:
          type: string
          example: 'casado'
        occupation:
          type: string
          example: 'contador'
        nationality:
          type: string
          example: 'brasileiro'
        nit:
          type: string
          example: '123.456789-12'
        email:
          type: string
        telephone:
          type: array
          items:
            $ref: '#/components/schemas/Telephone'
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        inscMunicipal:
          type: string
        contribuinte:
          type: string
          enum:
            - 'Isento'
            - 'Contribuinte'
            - 'Não Contribuinte'
        inscEstadual:
          type: string


    ResponseUser:
      allOf:
        - type: object
          properties:
            id:
              type: string
              example: '13c18c9e-3485-4528-a116-acd7b76a75ad'
        - $ref: '#/components/schemas/User'
    Updateuser:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            oldPassword:
              type: string
              example: 'pass123'
    Credentials:
      type: object
      properties:
        email:
          type: string
          example: 'gustavo@saturnlaw.com.br'
        passsword:
          type: string
          example: 'pass123'
    SignIn:
      type: object
      properties:
        user:
          properties:
            id:
              type: string
              example: '13c18c9e-3485-4528-a116-acd7b76a75ad'
            name:
              type: string
              example: 'Gustavo Lopes'
            email:
              type: string
              example: 'gustavo@saturnlaw.com.br'
        token:
          type: string
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNTc1MDc4NDUyLCJleHAiOjE1NzU2ODMyNTJ9.oi2RiCP5sqKgP4C7hPSFLcMAPgRfuITH3hmfhN6Q_Qk'






    ResponseClient:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              example: '3e5068bf-f2ca-4a76-bf19-603894194b26'
        - $ref: '#/components/schemas/Client'
    ArrayOfClients:
      type: array
      items:
        $ref: '#/components/schemas/Client'

    KeyChain:
      type: object
      required:
        - system
        - username
        - password
      properties:
        id:
          type: string
          example: 'uuid-v4'
        system:
          type: string
          enum:
            - eCac
            - pgfn
            - inss
            - pmcg
            - other
          example: 'eCac'
        username:
          type: string
          example: '12345678901'
        password:
          type: string
          example: 'pass123'
        accessCode:
          type: string
          example: ''


    Telephone:
      type: object
      required:
        - ddd
        - number
      properties:
        ddd:
          type: string
          example: '67'
        number:
          type: string
          example: '3029-1934'
        type:
          type: string
          enum:
            - 'whatsapp'
            - 'self'
            - 'contact'
          example: 'whatsapp'

    Address:
      properties:
        country:
          type: string
          example: 'BRA'
          description: Sigla do país (padrão ISO 3166-1 conf. http://bit.ly/1OgCkxd)
        postalCode:
          type: string
          example: '79002-401'
        street:
          type: string
          example: 'Rua Jose Antonio'
        number:
          type: string
          example: '1248'
          description: S/N ou número
        street2:
          type: string
          example: 'Sala 01'
          description: complemento
        district:
          type: string
          example: 'Centro'
        city:
          type: string
          example: 'Campo Grande'
        state:
          type: string
          example: 'MS'


security:
  - bearerAuth: []



